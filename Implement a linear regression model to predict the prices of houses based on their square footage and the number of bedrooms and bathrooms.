import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Load the dataset
df = pd.read_csv('houses.csv')

# Prepare the features and target
X = df[['sqft', 'bedrooms', 'bathrooms']]  # Features
y = df['price']  # Target variable

# Splitting dataset into training and testing set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Creating a Linear Regression model
model = LinearRegression()

# Fitting the model with the training data
model.fit(X_train, y_train)

# Predicting the Test set results
y_pred = model.predict(X_test)

# Evaluating the model
print(f"Model Coefficients: {model.coef_}")
print(f"Model Intercept: {model.intercept_}")
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse}")

# Optional: Visualizing the results (for a single variable for simplicity)
# This step is optional and more meaningful if you are visualizing with a single feature.
plt.scatter(X_test['sqft'], y_test, color='red', label='Actual Price')
plt.scatter(X_test['sqft'], y_pred, color='blue', label='Predicted Price')
plt.title('House Prices Prediction')
plt.xlabel('Square Footage')
plt.ylabel('Price')
plt.legend()
plt.show()
